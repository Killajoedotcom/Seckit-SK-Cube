# This file contains common pin mappings for the BigTreeTech Octopus V1.
# To use this config, the firmware should be compiled for the STM32F446 with a "32KiB bootloader"
# Enable "extra low-level configuration options" and select the "12MHz crystal" as clock reference

# after running "make", copy the generated "klipper/out/klipper.bin" file to a
# file named "firmware.bin" on an SD card and then restart the OctoPus with that SD card.

# Easy access to the klipper.bin file?
# After running the MAKE command run
# cp out/klipper.bin ../klipper_config/firmware.bin

# See docs/Config_Reference.md for a description of parameters.

## Seckit SK-Cube 200mm BigTreeTech OctoPus V1 TMC2209 UART config

## *** THINGS TO CHANGE/CHECK: ***
## MCU paths                            [mcu] section
## Thermistor types                     [extruder] and [heater_bed] sections - See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types
## Z Endstop Switch location            [safe_z_home] section
## Homing end position                  [gcode_macro G32] section
## Z Endstop Switch  offset for Z0      [stepper_z] section
## Probe points                         [quad_gantry_level] section
## Min & Max gantry corner postions     [quad_gantry_level] section
## PID tune                             [extruder] and [heater_bed] sections
## Probe pin                            [probe] section
## Fine tune E steps                    [extruder] section

[mcu]
##  Obtain definition by "ls -l /dev/serial/by-id/" then unplug to verify
##--------------------------------------------------------------------
serial: /dev/serial/by-id/usb-Klipper_stm32f446xx_3D001300065053424E363420-if00
##--------------------------------------------------------------------


[display_status]

[virtual_sdcard]
path: ~/gcode_files

[printer]
kinematics: corexy
max_velocity: 500  
max_accel: 8000    			
max_accel_to_decel: 4000		#Klipper recommends 1/2 of max_accel
max_z_velocity: 8 			#Max 15 for 12V TMC Drivers, can increase for 24V
max_z_accel: 200
square_corner_velocity: 6.0

[mcu rpi]
serial: /tmp/klipper_host_mcu

[adxl345]
cs_pin: rpi:None

[resonance_tester]
accel_chip: adxl345
probe_points:
    100,100,20  # an example

[temperature_sensor raspberry_pi]
sensor_type: temperature_host
min_temp: 10
max_temp: 100

#####################################################################
# 	Includes
#####################################################################

[include timelapse.cfg]

#####################################################################
# 	X/Y Stepper Settings
#####################################################################

[stepper_x]
step_pin: PF13
dir_pin: PF12
enable_pin: !PF14
rotation_distance: 32 # was 32 default @ 16 microsteps
microsteps: 16 #16 Default
full_steps_per_rotation: 200  #set to 400 for 0.9 degree stepper - default
endstop_pin: PG6
position_min: -5
position_endstop: -0
position_max: 215 
homing_speed: 50  #Max 100
homing_retract_dist: 5
#step_pulse_duration: 0.000002000
#   The minimum time between the step pulse signal edge and the
#   following "unstep" signal edge. This is also used to set the
#   minimum time between a step pulse and a direction change signal.
#   The default is 0.000000100 (100ns) for TMC steppers that are
#   configured in UART or SPI mode, and the default is 0.000002 (which
#   is 2us) for all other steppers.



## X Stepper on MOTOR0(B Motor)
[stepper_y]
step_pin: PG0
dir_pin: PG1
enable_pin: !PF15
rotation_distance: 32 #was 32 default
microsteps: 16 # 16 default
full_steps_per_rotation: 200  #set to 400 for 0.9 degree stepper -default
endstop_pin: PG9
position_min: -10
position_endstop: -10
position_max: 205 
homing_speed: 50   #Max 100
homing_retract_dist: 5
#step_pulse_duration: 0.000002000
#   The minimum time between the step pulse signal edge and the
#   following "unstep" signal edge. This is also used to set the
#   minimum time between a step pulse and a direction change signal.
#   The default is 0.000000100 (100ns) for TMC steppers that are
#   configured in UART or SPI mode, and the default is 0.000002 (which
#   is 2us) for all other steppers.
 
#####################################################################
# 	Z Stepper Settings
#####################################################################

## Z0 Stepper - Front Left on MOTOR2_1
[stepper_z]
step_pin: PF11
dir_pin: PG3
enable_pin: !PG5
rotation_distance: 32
gear_ratio: 20:1
microsteps: 16
endstop_pin: probe:z_virtual_endstop
position_max: 200
position_min: -2
homing_speed: 12
second_homing_speed: 2
homing_retract_dist: 5

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z]
uart_pin: PC6
interpolate: true
run_current: 0.65
hold_current: 0.5
sense_resistor: 0.110
stealthchop_threshold: 0

##	Z1 Stepper - Rear Left on MOTOR3
[stepper_z1]
step_pin: PG4
dir_pin: PC1
enable_pin: !PA0
rotation_distance: 32
gear_ratio: 20:1
microsteps: 16

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z1]
uart_pin: PC7
interpolate: true
run_current: 0.65
hold_current: 0.5
sense_resistor: 0.110
stealthchop_threshold: 0

##	Z2 Stepper - Rear Right on MOTOR4
[stepper_z2]
step_pin: PF9
dir_pin: !PF10
enable_pin: !PG2
rotation_distance: 32
gear_ratio: 20:1
microsteps: 16


##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z2]
uart_pin: PF2
interpolate: true
run_current: 0.65
hold_current: 0.5
sense_resistor: 0.110
stealthchop_threshold: 0

#####################################################################
# 	Extruder
#####################################################################

#	E0 on MOTOR6
[extruder]
step_pin: PE2
dir_pin: !PE3
enable_pin: !PD4
##	Update value below when you perform extruder calibration
##	If you ask for 100mm of filament, but in reality it is 98mm:
##	rotation_distance = <previous_rotation_distance> * <actual_extrude_distance> / 100
rotation_distance: 5.555	#Bondtech LGX Lite
microsteps: 16
full_steps_per_rotation: 200	#200 for 1.8 degree, 400 for 0.9 degree
nozzle_diameter: 0.400
filament_diameter: 1.75
heater_pin: PA2
##	Validate the following thermistor type to make sure it is correct
sensor_type: ATC Semitec 104NT-4-R025H42G
sensor_pin: PF4
min_temp: 0
max_temp: 305
max_power: 1.0
min_extrude_temp: 160
#control = pid
#pid_kp = 26.213
#pid_ki = 1.304
#pid_kd = 131.721
##	Try to keep pressure_advance below 1.0
pressure_advance: 0.05  #Default is 0.040

##	E0 on MOTOR6
##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2208 extruder]
uart_pin: PE1
interpolate: true
run_current: 0.65
hold_current: 0.4
sense_resistor: 0.110
stealthchop_threshold: 0


#####################################################################
# 	Bed Heater
#####################################################################

[heater_bed]
##	SSR Pin - BED_OUT
heater_pin: PA3
sensor_type: NTC 100K MGB18-104F39050L32
sensor_pin: PF3
##	Adjust Max Power so your heater doesn't warp your bed
max_power: 0.60
min_temp: 0
max_temp: 120
#control: pid
#pid_kp: 58.437
#pid_ki: 2.347
#pid_kd: 363.769
pwm_cycle_time: 0.01666 #(if 60hz power grid)
# pwm_cycle_time: 0.02        (if 50hz power grid)

#####################################################################
# 	Fan Control
#####################################################################

[fan]
##	Print Cooling Fan - CNC_FAN0
pin: PA8
kick_start_time: 1.0
off_below: 0.10

[heater_fan hotend_fan]
##	Hotend Fan - CNC_FAN1
pin: PE5
max_power: 1.0
kick_start_time: 1.0
heater: extruder
heater_temp: 50.0
##	If you are experiencing back flow, you can reduce fan_speed
fan_speed: 1.0

[controller_fan MCU_controller_fan]
##  Controller fan - CNC_FAN2
pin: PD12
max_power: 0.45
shutdown_speed: 0
kick_start_time: 0.5
idle_timeout: 30
idle_speed: 0.40
stepper: stepper_z, stepper_y, stepper_x, stepper_z2, stepper_z1, extruder

[heater_fan Intake_Fan]
##  Controller fan - CNC_FAN3
pin: PD13
max_power: 0.90
shutdown_speed: 0
kick_start_time: 0.5
heater: Chamber

[heater_fan Chamber]
##  Controller fan - CNC_FAN4
pin: PD14
max_power: 0.90
shutdown_speed: 0
kick_start_time: 0.5
heater: Chamber

[heater_generic Chamber]
gcode_id: chamber
#   The id to use when reporting the temperature in the M105 command.
#   This parameter must be provided.
heater_pin: PB10
max_power: 0.75
sensor_type: Generic 3950
sensor_pin: PF5
smooth_time: 1.0
control: pid
pid_Kp: 54.027
pid_Ki: 0.770
pid_Kd: 948.182
pwm_cycle_time: 0.3
min_temp: 0
max_temp: 55
#   See the "extruder" section for the definition of the above
#   parameters.

[verify_heater Chamber]
max_error: 120
check_gain_time: 120
hysteresis: 5
heating_gain: 1

[gcode_arcs]
resolution: 1.0
#   An arc will be split into segments. Each segment's length will
#   equal the resolution in mm set above. Lower values will produce a
#   finer arc, but also more work for your machine. Arcs smaller than
#   the configured value will become straight lines. The default is
#   1mm.

[respond]
default_type: echo
#   Sets the default prefix of the "M118" and "RESPOND" output to one
#   of the following:
#       echo: "echo: " (This is the default)
#       command: "// "
#       error: "!! "
#default_prefix: echo:
#   Directly sets the default prefix. If present, this value will
#   override the "default_type".

[exclude_object]

[gcode_macro M486]
gcode:
  # Parameters known to M486 are as follows:
  #   [C<flag>] Cancel the current object
  #   [P<index>] Cancel the object with the given index
  #   [S<index>] Set the index of the current object.
  #       If the object with the given index has been canceled, this will cause
  #       the firmware to skip to the next object. The value -1 is used to
  #       indicate something that isn’t an object and shouldn’t be skipped.
  #   [T<count>] Reset the state and set the number of objects
  #   [U<index>] Un-cancel the object with the given index. This command will be
  #       ignored if the object has already been skipped

  {% if 'exclude_object' not in printer %}
    {action_raise_error("[exclude_object] is not enabled")}
  {% endif %}

  {% if 'T' in params %}
    EXCLUDE_OBJECT RESET=1

    {% for i in range(params.T | int) %}
      EXCLUDE_OBJECT_DEFINE NAME={i}
    {% endfor %}
  {% endif %}

  {% if 'C' in params %}
    EXCLUDE_OBJECT CURRENT=1
  {% endif %}

  {% if 'P' in params %}
    EXCLUDE_OBJECT NAME={params.P}
  {% endif %}

  {% if 'S' in params %}
    {% if params.S == '-1' %}
      {% if printer.exclude_object.current_object %}
        EXCLUDE_OBJECT_END NAME={printer.exclude_object.current_object}
      {% endif %}
    {% else %}
      EXCLUDE_OBJECT_START NAME={params.S}
    {% endif %}
  {% endif %}

  {% if 'U' in params %}
    EXCLUDE_OBJECT RESET=1 NAME={params.U}
  {% endif %}

[gcode_macro M600]
gcode:
    {% set X = params.X|default(50)|float %}
    {% set Y = params.Y|default(0)|float %}
    {% set Z = params.Z|default(10)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91
    G1 E-.8 F2700
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000
    G91
    G1 E-50 F1000
    RESTORE_GCODE_STATE NAME=M600_state

#####################################################################
# 	LED Control
#####################################################################

[output_pin caselight]
## Chamber Lighting - HE3 Connector (Optional)
pin: PB11
pwm:true
shutdown_value: 0
value:1
cycle_time: 0.01

#####################################################################
# 	Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
timeout: 1800

[probe]
##	Inductive Probe
##	This probe is not used for Z height, only Quad Gantry Leveling
pin: ~PB7
x_offset: -20
y_offset: 25.0
z_offset: 1.200
speed: 3.5
samples: 3
samples_result: median
sample_retract_dist: 4.0
samples_tolerance: 0.01
samples_tolerance_retries: 3

[safe_z_home]
home_xy_position: 100,100 # Change coordinates to the center of your print bed
speed: 100
z_hop: 10                 # Move up 10mm
z_hop_speed: 7.5

[bed_mesh]
speed: 75
horizontal_move_z: 5
mesh_min: 10, 31
mesh_max: 190, 175
probe_count: 5,5
fade_start: 1
fade_end: 10
fade_target: 0

[z_tilt]
z_positions:
	-10, 0
	115, 225
    225, 0
points:
	20,1
	115,180
    200,1
speed: 100
horizontal_move_z: 10
retries: 5
retry_tolerance: 0.02

[force_move]
enable_force_move: True #   Set to true to enable FORCE_MOVE and SET_KINEMATIC_POSITION

[input_shaper]

########################################
# EXP1 / EXP2 (display) pins
########################################

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PE8, EXP1_2=PE7,
    EXP1_3=PE9, EXP1_4=PE10,
    EXP1_5=PE12, EXP1_6=PE13,    # Slot in the socket on this side
    EXP1_7=PE14, EXP1_8=PE15,
    EXP1_9=<GND>, EXP1_10=<5V>,

    # EXP2 header
    EXP2_1=PA6, EXP2_2=PA5,
    EXP2_3=PB1, EXP2_4=PA4,
    EXP2_5=PB2, EXP2_6=PA7,      # Slot in the socket on this side
    EXP2_7=PC15, EXP2_8=<RST>,
    EXP2_9=<GND>, EXP2_10=<5V>

#####################################################################
# 	Displays
#####################################################################

## 	Uncomment the display that you have
#--------------------------------------------------------------------

;[gcode_arcs]
;resolution: 0.1

#[display]
##	RepRapDiscount 128x64 Full Graphic Smart Controller
#lcd_type: st7920
#cs_pin: EXP1_4
#sclk_pin: EXP1_5
#sid_pin: EXP1_3
#menu_timeout: 40
#encoder_pins: ^EXP2_5, ^EXP2_3
#click_pin: ^!EXP1_2

#[output_pin beeper]
#pin: EXP1_1

#--------------------------------------------------------------------
[display]
lcd_type: uc1701
cs_pin: EXP1_3
a0_pin: EXP1_4
rst_pin: EXP1_5
encoder_pins: ^EXP2_5, ^EXP2_3
click_pin: ^!EXP1_2
## Some micro-controller boards may require an spi bus to be specified:
#spi_bus: spi
## Alternatively, some micro-controller boards may work with software spi:
contrast: 63
spi_software_mosi_pin: PA7
spi_software_miso_pin: PA6
spi_software_sclk_pin: PA5

[output_pin beeper]
pin: EXP1_1

[neopixel btt_mini12864]
pin: EXP1_6
chain_count: 3
color_order: RGB
initial_RED: 0.4
initial_GREEN: 0.4
initial_BLUE: 0.4

##	Set RGB values on boot up for each Neopixel. 
##	Index 1 = display, Index 2 and 3 = Knob
[delayed_gcode setdisplayneopixel]
initial_duration: 1
gcode:
       SET_LED LED=btt_mini12864 RED=1 GREEN=1 BLUE=1 INDEX=1 TRANSMIT=0
       SET_LED LED=btt_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=0
       SET_LED LED=btt_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=3 

#--------------------------------------------------------------------

########################################
# MACROS
########################################

[pause_resume]

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
    ##### read E from pause macro #####
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}
    ##### set park positon for x and y #####
    # default is your max posion from your printer.cfg
    {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
    {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
    ##### calculate save lift position #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% if act_z < (max_z - 2.0) %}
        {% set z_safe = 2.0 %}
    {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}
    ##### end of definitions #####
    PAUSE_BASE
    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G1 E-{E} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}
    {% if "xyz" in printer.toolhead.homed_axes %}
      G1 Z{z_safe} F900
      G90
      G1 X{x_park} Y{y_park} F6000
    {% else %}
      {action_respond_info("Printer not homed")}
    {% endif %} 
    
[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
    ##### read E from pause macro #####
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}
    #### get VELOCITY parameter if specified ####
    {% if 'VELOCITY' in params|upper %}
      {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
    {%else %}
      {% set get_params = "" %}
    {% endif %}
    ##### end of definitions #####
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G91
      G1 E{E} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}  
    RESUME_BASE {get_params}

[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
    TURN_OFF_HEATERS
    CLEAR_PAUSE
    SDCARD_RESET_FILE
    BASE_CANCEL_PRINT
    
[gcode_macro G29]
gcode:
    BED_MESH_CALIBRATE

[firmware_retraction]
retract_length: 1
#   The length of filament (in mm) to retract when G10 is activated,
#   and to unretract when G11 is activated (but see
#   unretract_extra_length below). The default is 0 mm.
retract_speed: 40
#   The speed of retraction, in mm/s. The default is 20 mm/s.
unretract_extra_length: 0
#   The length (in mm) of *additional* filament to add when unretracting.
unretract_speed: 40
#   The speed of unretraction, in mm/s. The default is 10 mm/s.

######################################################################
# Start Print and End Print
######################################################################

# Replace the slicer's custom start and end g-code scripts with
# START_PRINT and END_PRINT.

[gcode_macro PRINT_START]
gcode:
    G28   
    Z_TILT_ADJUST
    M104 S200
    M109 S200
    G1 E9.8 F400
 
    

[gcode_macro PRINT_END]
gcode:
    M400                           # wait for buffer to clear
    G92 E0                         # zero the extruder
    G1 E-10.0 F3600                # retract filament 10mm
    G91                            # relative positioning
    G0 Z1.00 X20.0 Y20.0 F20000    # move nozzle to remove stringing
    TURN_OFF_HEATERS
    M107                           # turn off fan
    G1 Z10 F3000                   # move nozzle up 10mm
    G90                            # absolute positioning
    G0  X1 Y200 F3600              # park nozzle at rear
    M84

[gcode_macro m141]
description: Sets chamber temperature.
  Usage: M141 [S<temp>]
gcode:
  SET_HEATER_TEMPERATURE HEATER=Chamber TARGET={params.S|default(0)}

    
## 	Thermistor Types
##   "EPCOS 100K B57560G104F"
##   "ATC Semitec 104GT-2"
##   "NTC 100K beta 3950"
##   "Honeywell 100K 135-104LAG-J01"
##   "NTC 100K MGB18-104F39050L32" (Keenovo Heater Pad)
##   "AD595"
##   "PT100 INA826"

[neopixel my_neopixel]
pin: PB0
chain_count: 15
initial_RED: 0.5
initial_GREEN: 0.5
initial_BLUE: 0.5
color_order: GRB

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PE8, EXP1_2=PE7,
    EXP1_3=PE9, EXP1_4=PE10,
    EXP1_5=PE12, EXP1_6=PE13,    # Slot in the socket on this side
    EXP1_7=PE14, EXP1_8=PE15,
    EXP1_9=<GND>, EXP1_10=<5V>,

    # EXP2 header
    EXP2_1=PA6, EXP2_2=PA5,
    EXP2_3=PB1, EXP2_4=PA4,
    EXP2_5=PB2, EXP2_6=PA7,      # Slot in the socket on this side
    EXP2_7=PC15, EXP2_8=<RST>,
    EXP2_9=<GND>, EXP2_10=<5V>

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 35.363
#*# pid_ki = 1.917
#*# pid_kd = 163.113
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 27.732
#*# pid_ki = 1.761
#*# pid_kd = 109.196
